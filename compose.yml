# Docker compose file for Twit2 development
name: "twit2"
services:
    # Proxy server
    proxy:
        image: nginx
        ports:
            - 8080:80
            - 8443:443
        volumes:
            - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./etc/nginx/sites-enabled:/etc/nginx/sites-enabled
            - ./etc/certbot/www/:/var/www/certbot/:ro
        extra_hosts:
            - "host.docker.internal:host-gateway"

    # Certbot - For https
    certbot:
        image: certbot/certbot:latest
        volumes:
        - ./etc/certbot/www/:/var/www/certbot/:rw
        - ./etc/certbot/conf/:/etc/letsencrypt/:rw

    # KrakenD - api gateway
    krakend:
        ports:
            - 8090:8090
        volumes:
            - ./etc/krakend:/etc/krakend/
        image: devopsfaith/krakend
        command: run --config /etc/krakend/krakend.json
        extra_hosts:
            - "host.docker.internal:host-gateway"

    # Message Broker
    rabbitmq:
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - ./data/rabbitmq/logs:/var/log/rabbitmq
        image: rabbitmq:3.12-management
        extra_hosts:
            - "host.docker.internal:host-gateway"
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 30s
            timeout: 15s
            retries: 5
            start_period: 20s

    # MongoDB
    mongodb:
        image: mongodb/mongodb-community-server:latest
        ports:
            - 27017:27017
        volumes:
            - ./data/mongo:/data/db
        extra_hosts:
            - "host.docker.internal:host-gateway"

   # User Service
    svc-users:
        restart: on-failure
        ports:
            - 3201:3201
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            - DB_NAME=t2-users
            - DB_URL=mongodb://host.docker.internal:27017
            - MQ_URL=amqp://host.docker.internal:5672
            - HTTP_PORT=3201

        depends_on:
            rabbitmq:
                condition: service_healthy

    # Authentication Service
    svc-auth:
        restart: on-failure
        ports:
            - 3200:3200
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            - DB_NAME=t2-auth
            - DB_URL=mongodb://host.docker.internal:27017
            - MQ_URL=amqp://host.docker.internal:5672
            - HASH_ALGO=bcrypt
            - HASH_ROUNDS=14
            - HTTP_PORT=3200

        depends_on:
            rabbitmq:
                condition: service_healthy

    # Posts Service
    svc-posts:
        restart: on-failure
        ports:
            - 3202:3202
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            - DB_NAME=t2-posts
            - DB_URL=mongodb://host.docker.internal:27017
            - MQ_URL=amqp://host.docker.internal:5672
            - HTTP_PORT=3202

        depends_on:
            rabbitmq:
                condition: service_healthy

    # Posts Service
    svc-cdn:
        restart: on-failure
        ports:
            - 3400:3400
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            - MQ_URL=amqp://host.docker.internal:5672
            - HTTP_PORT=3400
        volumes:
            - ./data/cdn/content:/app/content/
        depends_on:
            rabbitmq:
                condition: service_healthy

    # Frontend app
    app-frontend:
        restart: on-failure
        ports:
            - 3000:3000
        extra_hosts:
            - "host.docker.internal:host-gateway"

        depends_on:
            rabbitmq:
                condition: service_healthy

    # Admin frontend app
    app-admin-frontend:
        restart: on-failure
        ports:
            - 3500:3500
        extra_hosts:
            - "host.docker.internal:host-gateway"

        depends_on:
            rabbitmq:
                condition: service_healthy